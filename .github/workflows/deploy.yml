# This is a basic workflow to help you get started with Actions

name: Deploy

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"

    - name: Install Composer Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

    - name: Install NPM Dependencies
      run: npm install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

    - name: Compile NPM Dependencies
      run: npm run prod -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

    - name: Compile NPM Dependencies
      run: npm run prod -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

    - name: Copy file via scp to PROD host
      uses: appleboy/scp-action@master
      env:
        HOST: ${{ secrets.HOST }}
        USERNAME: ${{ secrets.USERNAME }}
        PORT: ${{ secrets.PORT }}
        KEY: ${{ secrets.SSH_KEY }}
      with:
        source: "."
        target: ${{ secrets.DEPLOY_FOLDER }}

    - name: Generate key
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        USERNAME: ${{ secrets.USERNAME }}
        PORT: ${{ secrets.PORT }}
        KEY: ${{ secrets.SSH_KEY }}
        script: php ${{ secrets.DEPLOY_FOLDER }}/artisan key:generate

    - name: Setting directory permissions
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        USERNAME: ${{ secrets.USERNAME }}
        PORT: ${{ secrets.PORT }}
        KEY: ${{ secrets.SSH_KEY }}
        script: chmod -R 777 ${{ secrets.DEPLOY_FOLDER }}/storage ${{ secrets.DEPLOY_FOLDER }}/bootstrap/cache
